- name: Setup basic actions on computers at home
  hosts: all

  vars_files:
  - ~/osobiste/dane_aplikacji/remik/ansible_vault.yml

  become: yes
  become_user: root
  serial: "{{ serial_number|default(3) }}"
  tasks:
   - name: Install required packages
     apt:
       name: vim,jq
       state: present
     tags:
      - update
      - kafka_1.1.1

   - name: Download kafka_2.12-1.1.1.tgz
     get_url:
       url: https://archive.apache.org/dist/kafka/1.1.1/kafka_2.12-1.1.1.tgz
       dest: /opt/kafka_2.12-1.1.1.tgz
       checksum: md5:29c20027940c5c6f83fffd393df78f09
     tags:
      - kafka_1.1.1
      - kafka_1.1.1_bin

   - name: Extract kafka_2.12-1.1.1.tgz into /opt
     unarchive:
       src: /opt/kafka_2.12-1.1.1.tgz
       dest: /opt
       remote_src: yes
       creates: /opt/kafka_2.12-1.1.1
     tags:
      - kafka_1.1.1
      - kafka_1.1.1_bin

   - name: Create a symbolic link /opt/kafka -> /opt/kafka_2.12-1.1.1
     ansible.builtin.file:
       src: /opt/kafka_2.12-1.1.1
       dest: /opt/kafka
       state: link
       force: yes
     tags:
      - kafka_1.1.1
      - kafka_1.1.1_bin_link


## For Kafka kafka_2.11-1.0.0 just basic binaries install
   - name: Download kafka_2.11-1.0.0.tgz
     get_url:
       url: https://archive.apache.org/dist/kafka/1.0.0/kafka_2.11-1.0.0.tgz
       dest: /opt/kafka_2.11-1.0.0.tgz
       checksum: md5:b652611004a992cd71f13b1dfe304b55
     tags:
      - kafka_1.0.0

   - name: Extract kafka_2.11-1.0.0.tgz into /opt
     unarchive:
       src: /opt/kafka_2.11-1.0.0.tgz
       dest: /opt
       remote_src: yes
       creates: /opt/kafka_2.11-1.0.0
     tags:
      - kafka_1.0.0


## / For Kafka kafka_2.11-1.0.0 just basic binaries install

   - name: Modify server.properties listeners=PLAINTEXT
     replace:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       regexp: '^#listeners=PLAINTEXT'
       replace: 'listeners=PLAINTEXT'
     tags:
      - kafka_1.1.1

   - name: Modify server.properties log.dirs
     replace:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       regexp: '^log.dirs=/tmp/kafka-logs'
       replace: 'log.dirs=/opt/kafka-1.1.1-data'
     tags:
      - kafka_1.1.1

   - name: Modify server.properties add couple non default parameters
     blockinfile:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       block: |
         delete.topic.enable=true
         num.partitions=8
         default.replication.factor=3
         log.retention.hours=168
         zookeeper.connection.timeout.ms=6000
         auto.create.topics.enable=false
         offsets.topic.replication.factor=3
         min.insync.replicas=2
     tags:
      - kafka_1.1.1
      - change_config

   - name: Creates /opt/kafka-1.1.1-data directory
     file:
       path: /opt/kafka-1.1.1-data
       state: directory
     tags:
      - kafka_1.1.1

   - name: Modify server.properties zookeeper.connect
     replace:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       regexp: '^zookeeper.connect=localhost:2181'
       replace: 'zookeeper.connect=consumer1:2181'
     tags:
      - kafka_1.1.1

   - name: Modify server.properties broker.id and use last ip octet
     replace:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       regexp: '^broker.id=0'
       replace: 'broker.id={{ ansible_eth0.ipv4.address.split(".")[-1] }}'
     tags:
      - kafka_1.1.1

   - name: Creates /opt/prometheus directory
     file:
       path: /opt/prometheus
       state: directory
     tags:
      - kafka_1.1.1
      - jmx_prometheus_javaagent-0.3.1

   - name: Download jmx_prometheus_javaagent-0.3.1.jar
     get_url:
       url: https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.1/jmx_prometheus_javaagent-0.3.1.jar
       dest: /opt/prometheus/jmx_prometheus_javaagent-0.3.1.jar
       checksum: md5:4f08e57afb4088469904956237c0cf8e
     tags:
      - kafka_1.1.1
      - jmx_prometheus_javaagent-0.3.1

   - name: Download kafka-0-8-2.yml
     get_url:
       url: https://raw.githubusercontent.com/prometheus/jmx_exporter/master/example_configs/kafka-0-8-2.yml
       dest: /opt/prometheus/kafka-0-8-2.yml
       checksum: md5:8341aa61b494660132ab8a6c7312a780
     tags:
      - kafka_1.1.1
      - jmx_prometheus_javaagent-0.3.1


   - name: Jolokia - Creates /opt/jolokia directory
     file:
       path: /opt/jolokia
       state: directory
     tags:
      - kafka_1.1.1
      - jolokia

   - name: Jolokia - Download jolokia-jvm-1.6.0-agent.jar
     get_url:
       url: http://search.maven.org/remotecontent?filepath=org/jolokia/jolokia-jvm/1.6.0/jolokia-jvm-1.6.0-agent.jar
       dest: /opt/jolokia/jolokia-agent.jar
       checksum: md5:01df022b01a34c9b021231172adc776b
     tags:
      - kafka_1.1.1
      - jolokia


   - name: Run Kafka 1.1.1 as a service
     copy:
       dest: /etc/systemd/system/kafka.service
       backup: yes
       content: |
         [Unit]
         Requires=network.target remote-fs.target
         After=network.target remote-fs.target
         StartLimitIntervalSec=600
         StartLimitBurst=10

         [Service]
         Type=simple
         User=root
         Environment="KAFKA_HEAP_OPTS=-Xmx300M -Xms256M"
         Environment="KAFKA_OPTS=-javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/opt/prometheus/kafka-0-8-2.yml -javaagent:/opt/jolokia/jolokia-agent.jar=host=*"
         ExecStart=/bin/sh -c '/opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties > /opt/kafka/logs/kafka_start.log 2>&1'
         ExecStop=/opt/kafka/bin/kafka-server-stop.sh
         Restart=on-failure
         RestartSec=60s

         [Install]
         WantedBy=multi-user.target
     register: kafka
     tags:
      - kafka_1.1.1
      - service

   - name: Creates /opt/kafka-1.1.1-data directory
     file:
       path: /opt/kafka_2.12-1.1.1/logs
       state: directory
     tags:
      - kafka_1.1.1

   - name: Start Kafka 1.1.1
     service:
       name: kafka.service
       state: started
       enabled: yes
     tags:
      - kafka_1.1.1

   - name: Restart Kafka 1.1.1 if some configuration has changed
     service:
       name: kafka.service
       state: restarted
       enabled: yes
       daemon_reload: yes
     when: kafka.changed
     tags:
      - kafka_1.1.1
      - service

   - name: Checking loop
     debug:
       msg="Now working with {{ item }}"
     loop: "{{ mm_scripts }}"
     tags:
      - mm_scripts

   - name: Mirror Maker - check if configured script exists
     stat:
       path: "{{ item }}"
     loop: "{{ mm_scripts }}"
     register: stat_result
     tags:
      - mm_scripts

   - name: Mirror Maker - if file exists
     debug:
       #msg="Will work with {{ item.item }}"
       #msg="Will work with {{ item.item | basename }}"
       #msg="Will work with {{ item.item | dirname }}"
       msg="Will work with {{ item.item.split(".")[0] | basename }}"
     loop: "{{ stat_result.results }}"
     when: item.stat.exists
     tags:
      - mm_scripts

   - name: Mirror Maker - Create systemd script from template 
     template:
       src: ~/scripto/ansible/templates/systemd_mirror_maker_job.j2
       dest: /etc/systemd/system/{{ item.item.split(".")[0] | basename }}.service
       backup: yes
     loop: "{{ stat_result.results }}"
     when: item.stat.exists
     tags:
      - mm_scripts


   - name: Enable "{{ item.item.split(".")[0] | basename }}" service for automatic start
     service:
       name: "{{ item.item.split('.')[0] | basename }}"
       state: started
       enabled: yes
       daemon_reload: yes
     loop: "{{ stat_result.results }}"
     when: item.stat.exists
     tags:
      - mm_scripts


   - name: Creates /var/log/mirror_maker directory
     ansible.builtin.file:
       path: /var/log/mirror_maker
       state: directory
       owner: root
       group: root
       mode: '0755'
     tags:
      - mm_scripts
      - kafka_1.1.1

   - name: Upgrade to Kafka 2 - Modify server.properties add 
     blockinfile:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       backup: yes
       marker: "# {mark} ANSIBLE MANAGED UPGRADE 2 BLOCK"
       block: |
         inter.broker.protocol.version=1.1
         log.message.format.version=1.1
     register: kafka_config
     tags:
      - kafka_up_2a

   - name: Restart Kafka 1.1.1 if some configuration has changed
     service:
       name: kafka.service
       state: restarted
       enabled: yes
       daemon_reload: yes
     when: kafka_config.changed
     tags:
      - kafka_up_2a

   - name: Wait 10 seconds to allow Sentinel to start and receive configuration from Redis master
     pause:
       seconds: 10
     tags:
      - kafka_up_2a


   - name: Download kafka_2.12-2.3.0.tgz
     get_url:
       url: https://archive.apache.org/dist/kafka/2.3.0/kafka_2.12-2.3.0.tgz
       dest: /opt/kafka_2.12-2.3.0.tgz
       checksum: md5:8f86fb2421f6392f72bd8d7e1cfe4bf6
     tags:
      - kafka_2.3.0

   - name: Extract kafka_2.12-2.3.0.tgz into /opt
     unarchive:
       src: /opt/kafka_2.12-2.3.0.tgz
       dest: /opt
       remote_src: yes
       creates: /opt/kafka_2.12-2.3.0
     tags:
      - kafka_2.3.0

   - name: Create a symbolic link /opt/kafka -> /opt/kafka_2.12-2.3.0
     ansible.builtin.file:
       src: /opt/kafka_2.12-2.3.0
       dest: /opt/kafka
       state: link
       force: yes
     tags:
      - kafka_2.3.0_bin_link

   - name: Copy /opt/kafka_2.12-1.1.1/config/server.properties to /opt/kafka_2.12-2.3.0/config/
     ansible.builtin.copy:
       remote_src: yes
       src: /opt/kafka_2.12-1.1.1/config/server.properties
       dest: /opt/kafka_2.12-2.3.0/config/server.properties
       backup: yes
     tags:
      - kafka_2.3.0_copy_from_1.1.1

   - name: Restart Kafka from new binaries
     service:
       name: kafka.service
       state: restarted
       enabled: yes
       daemon_reload: yes
     tags:
      - kafka_restart

   - name: Wait 10 seconds to allow Sentinel to start and receive configuration from Redis master
     pause:
       seconds: 10
     tags:
      - kafka_restart

   - name: Upgrade to Kafka 2 - Modify server.properties add 
     blockinfile:
       path: /opt/kafka_2.12-2.3.0/config/server.properties
       backup: yes
       marker: "# {mark} ANSIBLE MANAGED UPGRADE 2 BLOCK"
       block: |
         inter.broker.protocol.version=2.3
         log.message.format.version=1.1
     register: kafka_config
     tags:
      - kafka_inter_broker_2_3

   - name: Upgrade to Kafka 2 - Modify server.properties add 
     blockinfile:
       path: /opt/kafka_2.12-2.3.0/config/server.properties
       backup: yes
       marker: "# {mark} ANSIBLE MANAGED UPGRADE 2 BLOCK"
       block: |
         inter.broker.protocol.version=2.3
         log.message.format.version=2.3
     register: kafka_config
     tags:
      - kafka_log_message_2_3


   - name: Checking loop
     debug:
       msg="Checking if the following processes are running {{ ps_check }}"
     tags:
      - mm_monitor

   - name: Look for the "foo" process
     shell: ps -ef |  grep "{{ ps_check }}" | grep -v grep
     register: process_list
     changed_when: false  
     failed_when: process_list.rc != 1 and process_list.rc != 0
     tags:
      - mm_monitor

   - name: (debug) What I found running 
     debug:
       msg="check {{ process_list }}"
     tags:
      - mm_monitor

   - name: Process is not running, doing something with it.
     shell: echo "ala ma kota" >> /tmp/ala_ma_kota
     when: "process_list.rc == 1"  
     tags:
      - mm_monitor


# debug
   - name: Display all variables/facts known for a host
     debug:
       var: hostvars[inventory_hostname]
     tags:
      - debug_info
      - never
