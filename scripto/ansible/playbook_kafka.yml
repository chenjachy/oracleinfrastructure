- name: Setup basic actions on computers at home
  hosts: all

  vars_files:
  - ~/osobiste/dane_aplikacji/remik/ansible_vault.yml

  become: yes
  become_user: root
  tasks:
   - name: Install required packages
     apt:
       name: vim
       state: present
     tags:
      - update

   - name: Download kafka_2.12-1.1.1.tgz
     get_url:
       url: https://archive.apache.org/dist/kafka/1.1.1/kafka_2.12-1.1.1.tgz
       dest: /opt/kafka_2.12-1.1.1.tgz
       checksum: md5:29c20027940c5c6f83fffd393df78f09
     tags:
      - kafka_1.1.1

   - name: Extract kafka_2.12-1.1.1.tgz into /opt
     unarchive:
       src: /opt/kafka_2.12-1.1.1.tgz
       dest: /opt
       remote_src: yes
       creates: /opt/kafka_2.12-1.1.1
     tags:
      - kafka_1.1.1

   - name: Modify server.properties listeners=PLAINTEXT
     replace:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       regexp: '^#listeners=PLAINTEXT'
       replace: 'listeners=PLAINTEXT'
     tags:
      - kafka_1.1.1

   - name: Modify server.properties log.dirs
     replace:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       regexp: '^log.dirs=/tmp/kafka-logs'
       replace: 'log.dirs=/opt/kafka-1.1.1-data'
     tags:
      - kafka_1.1.1

   - name: Modify server.properties add couple non default parameters
     blockinfile:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       block: |
         delete.topic.enable=true
         num.partitions=8
         default.replication.factor=3
         log.retention.hours=168
         zookeeper.connection.timeout.ms=6000
         auto.create.topics.enable=false
         offsets.topic.replication.factor=3
     tags:
      - kafka_1.1.1
      - tmp

   - name: Creates /opt/kafka-1.1.1-data directory
     file:
       path: /opt/kafka-1.1.1-data
       state: directory
     tags:
      - kafka_1.1.1

   - name: Modify server.properties zookeeper.connect
     replace:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       regexp: '^zookeeper.connect=localhost:2181'
       replace: 'zookeeper.connect=consumer1:2181'
     tags:
      - kafka_1.1.1

   - name: Modify server.properties broker.id and use last ip octet
     replace:
       path: /opt/kafka_2.12-1.1.1/config/server.properties
       regexp: '^broker.id=0'
       replace: 'broker.id={{ ansible_eth0.ipv4.address.split(".")[-1] }}'
     tags:
      - kafka_1.1.1

   - name: Run Kafka 1.1.1 as a service
     copy:
       dest: /etc/systemd/system/kafka111.service
       content: |
         [Unit]
         Requires=network.target remote-fs.target
         After=network.target remote-fs.target
         StartLimitIntervalSec=600
         StartLimitBurst=10

         [Service]
         Type=simple
         User=root
         Environment="KAFKA_HEAP_OPTS=-Xmx512M -Xms256M"
         ExecStart=/bin/sh -c '/opt/kafka_2.12-1.1.1/bin/kafka-server-start.sh /opt/kafka_2.12-1.1.1/config/server.properties > /opt/kafka_2.12-1.1.1/logs/kafka_start.log 2>&1'
         ExecStop=/opt/kafka_2.12-1.1.1/bin/kafka-server-stop.sh
         Restart=on-failure
         RestartSec=60s

         [Install]
         WantedBy=multi-user.target
     register: kafka
     tags:
      - kafka_1.1.1

   - name: Creates /opt/kafka-1.1.1-data directory
     file:
       path: /opt/kafka_2.12-1.1.1/logs
       state: directory
     tags:
      - kafka_1.1.1

   - name: Start Kafka 1.1.1
     service:
       name: kafka111.service
       state: started
       enabled: yes
     tags:
      - kafka_1.1.1

   - name: Restart Kafka 1.1.1 if some configuration has changed
     service:
       name: kafka111.service
       state: restarted
       enabled: yes
       daemon_reload: yes
     when: kafka.changed
     tags:
      - kafka_1.1.1

   - name: Checking loop
     debug:
       msg="Now working with {{ item }}"
     loop: "{{ mm_scripts }}"
     tags:
      - mm_scripts

   - name: Mirror Maker - check if configured script exists
     stat:
       path: "{{ item }}"
     loop: "{{ mm_scripts }}"
     register: stat_result
     tags:
      - mm_scripts

   - name: Mirror Maker - if file exists
     debug:
       #msg="Will work with {{ item.item }}"
       #msg="Will work with {{ item.item | basename }}"
       #msg="Will work with {{ item.item | dirname }}"
       msg="Will work with {{ item.item.split(".")[0] | basename }}"
     loop: "{{ stat_result.results }}"
     when: item.stat.exists
     tags:
      - mm_scripts

   - name: Mirror Maker - Create systemd script from template 
     template:
       src: ~/scripto/ansible/templates/systemd_mirror_maker_job.j2
       dest: /etc/systemd/system/{{ item.item.split(".")[0] | basename }}.service
       backup: yes
     loop: "{{ stat_result.results }}"
     when: item.stat.exists
     tags:
      - mm_scripts


   - name: Enable {{ item.item.split(".")[0] | basename }} service for automatic start
     service:
       name: "{{ item.item.split('.')[0] | basename }}"
       state: started
       enabled: yes
       daemon_reload: yes
     loop: "{{ stat_result.results }}"
     when: item.stat.exists
     tags:
      - mm_scripts


   - name: Creates /opt/kafka-1.1.1-data directory
     ansible.builtin.file:
       path: /var/log/mirror_maker
       state: directory
       owner: pi
       group: pi
       mode: '0755'
     tags:
      - mm_scripts
      - kafka_1.1.1


# debug
   - name: Display all variables/facts known for a host
     debug:
       var: hostvars[inventory_hostname]
     tags:
      - debug_info
      - never
