<source>
  @type tail
  @log_level debug
  path /apps/**/log/*.log,/apps/**/log/*.out,/apps/**/logs/*.log,/apps/**/logs/*.out,/opt/*/log/*.log,/opt/*/log/*.out,/opt/*/logs/*.log,/opt/*/logs/*.out,/var/log/*.log,/var/log/*/*.log
  pos_file /tmp/msystem.log.pos
  #tag access
  tag access.*
  <parse>
    @type none
  </parse>
  #format none
  #format json
  #format in_syslog
</source>

<filter access.**>
  @type grep
  <exclude>
    key message
    pattern /Accepted publickey|Added fetcher for partitions List|Cached leader info PartitionState|Changed state of replica|Closed GnuPG cryptographic agent and passphrase cache|Completed LeaderAndIsr request correlationId|Completed load of log with 1 segments, log start offset 0|Created slice User Slice|DEBUG \[Controller|Disconnected from user|Exit the Session|Finished loading offsets and group metadata from __consumer|Finished unloading __consumer_offsets|GnuPG|Handling LeaderAndIsr request correlationId|INFO Created log for partition|Listening on D-Bus User Message Bus Socket|Loading producer state from offset 0 with message format|New partition creation callback for|New session|No checkpointed highwatermark is found for partition|Processing automatic preferred replica leader election|Reached target Basic System|Reached target Paths|Reached target Shutdown|Reached target Sockets|Reached target Timers|Received LeaderAndIsr request PartitionState|Received disconnect from|Received response {error_code=0|Received response {error_code=0} for request UPDATE_METADATA|Removed 0 expired offsets in|Removed fetcher for partitions|Removed session|Removed slice User Slice of UID|Scheduling unloading of offsets and group metadata from __consumer_offsets|Sending UpdateMetadata request PartitionState|Sending become-leader LeaderAndIsr|Started Session|Started User Runtime Directory|Starting D-Bus User Message Bus Socket|Starting User Manager for UID|Starting User Runtime Directory|Startup finished in|Stopped User Manager for UID|Stopped User Runtime Directory|Stopped fetchers as part of become-leader request from controller|Stopped target Basic System|Stopped target Paths|Stopped target Sockets|Stopped target Timers|Stopping User Manager for UID|Stopping User Runtime Directory|TRACE \[Controller|Waiting for processes to exit|dirmngr\.socket\: Succeeded|gpg-agent-browser\.socket\: Succeeded|gpg-agent-extra.socket|gpg-agent-ssh|gpg-agent.socket: Succeeded|initial high watermark 0|pam_unix(sshd:session)|rngd\[|run-user-1000.mount|session closed for user|session opened for user|starts at Leader Epoch 0 from offset 0|systemd-exit.service|target Default|user-runtime-dir|user\@1000\.service|disable filter chain optimization because|.scope: Succeeded.|Closed D-Bus User Message Bus Socket|Starting Cleanup of Temporary Directories|Started Cleanup of Temporary Directories|systemd-tmpfiles-clean.service|dbus.socket: Succeeded|GC \(Allocation Failure\)|\"GET \/metrics HTTP\/1.1\" 200|Updating internal state|\[INFO\] - from kafka.manager.actor.KafkaManagerActor in kafka-manager-system-akka.actor.default-dispatcher-|k.m.a.c.BrokerViewCacheActor - Updating broker view|k.m.a.c.KafkaManagedOffsetCache - Backfilling group metadata for ArrayBuffer|\[INFO\] - from kafka.manager.actor.cluster.BrokerViewCacheActor in kafka-manager-system-akka.actor.default-dispatcher|Updating broker view|^$|\[INFO\] - from kafka.manager.actor.cluster.KafkaManagedOffsetCache|Backfilling group metadata for ArrayBuffer/
  </exclude>
</filter>

<filter access.**>
  @type record_transformer
  <record>
    host ${hostname}
    #path ${tag}
    path ${tag_parts[-2]}
  </record>
</filter>

#<match access.**>
#  @type stdout
#</match>

<match access.**>
  @type kafka2

  # list of seed brokers
  brokers 192.168.1.104:9092
  use_event_time true

  # buffer settings
  <buffer remi_logs>
    @type file
    path /tmp/buffer_td
    flush_interval 3s
  </buffer>

  # data type settings
  <format>
    @type json
  </format>

  # topic settings
  topic_key remi_logs
  default_topic remi_logs

  # producer settings
  required_acks -1
</match>
