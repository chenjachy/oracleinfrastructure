- name: Setup basic actions on computers at home
  hosts: all

  vars_files:
  - ~/osobiste/dane_aplikacji/remik/ansible_vault.yml

  become: yes
  become_user: root
  tasks:
   - name: Install required packages
     apt:
       name: vim,subversion,openjdk-11-jre-headless
       state: present
     tags:
      - update
      - scripto

  
   - name: Make sure .vimrc disables visual mode
     lineinfile:
       dest: /home/pi/.vimrc
       line: "set mouse-=a"
       state: present
       create: yes
     tags:
      - update

   - name: Make sure .vimrc enables syntax highlighting
     lineinfile:
       dest: /home/pi/.vimrc
       line: "syntax on"
       state: present
       create: yes
     tags:
      - update

   - name: Make sure .vimrc has proper owner:group
     file:
       path: /home/pi/.vimrc
       owner: pi
       group: pi
       mode: 0644
     tags:
      - update

   - name: Make sure root/.vimrc disables visual mode
     lineinfile:
       dest: /root/.vimrc
       line: "set mouse-=a"
       state: present
       create: yes
     tags:
      - update

   - name: Make sure root/.vimrc enables syntax highlighting
     lineinfile:
       dest: /root/.vimrc
       line: "syntax on"
       state: present
       create: yes
     tags:
      - update

   - name: Fix locale Cannot set LC_CTYPE to default locale No such file or directory
     blockinfile:
       path: /home/pi/.profile
       block: |
         export LANGUAGE=en_GB.UTF-8
         export LANG=en_GB.UTF-8
         export LC_ALL=en_GB.UTF-8
     tags:
      - update

   - name: Set CEST timezone
     ansible.builtin.shell: timedatectl set-timezone Europe/Warsaw
     tags:
      - update


   - name: Remove non-essential packages to save on space
     apt:
       name: emacs,samba-common,scratch,minecraft-pi,manpages,manpages-dev,gnome-user-guide,rpd-wallpaper,xserver-xorg,wolfram-engine,libreoffice,yelp
       state: absent
     tags:
      - cleanup

   - name: Remove useless packages from the cache
     apt:
       autoclean: yes
     tags:
      - cleanup

   - name: Remove dependencies that are no longer required
     apt:
       autoremove: yes
     tags:
      - cleanup

   - name: Setup Wi-Fi abrakadabra
     blockinfile:
       path: /etc/wpa_supplicant/wpa_supplicant.conf
       block: |
         network={
           ssid="abrakadabra"
           psk="{{ vault_wifi_abrakadabra }}"
         }
     tags:
      - wifia
      
   - name: Setup Wi-Fi remikaniaslowicza
     blockinfile:
       path: /etc/wpa_supplicant/wpa_supplicant.conf
       block: |
         network={
           ssid="remikaniaslowicza"
           psk="{{ vault_wifi_remikaniaslowicza }}"
         }
     tags:
      - wifir
      
   - name: Setup hostname
     hostname:
       name: "{{ inventory_hostname }}"
     tags:
      - hostname

   - name: Setup /etc/hosts
     lineinfile:
       dest: /etc/hosts
       regexp: '.*{{ inventory_hostname }}$'
       line: '{{ ansible_ssh_host }} {{ inventory_hostname }}'
       state: present
     tags:
      - hostname

   
   - name: Setup static ip for wlan0
     blockinfile:
       path: /etc/dhcpcd.conf
       block: |
         interface wlan0

         static ip_address={{ ansible_ssh_host }}/24
         static routers=192.168.1.1
         static domain_name_servers=192.168.1.1
     tags:
      - static_ip

   - name: Setup static ip for eth0
     lineinfile: dest=/boot/cmdline.txt
       backrefs=True
       state=present
       regexp='(^dwc_otg(.*)$)'
       line='\1 net.ifnames=0'
     tags:
      - static_ip_eth0

   - name: Setup static ip for eth0
     blockinfile:
       path: /etc/dhcpcd.conf
       block: |
         interface eth0

         static ip_address={{ ansible_ssh_new_host }}/24
         static routers=192.168.1.1
         static domain_name_servers=192.168.1.1
     tags:
      - static_ip_eth0



   - name: Setup cassandra node, 1. copy jdk
     unarchive:
       src: /KASZTELAN/mirror/utils/jdk-8u191-linux-arm32-vfp-hflt.tar.gz
       dest: /opt
       creates : /opt/jdk1.8.0_191
     tags:
      - cassandra
      - jdk

   - name: Setup cassandra node, 2. copy cassandra binaries
     unarchive:
       src: /KASZTELAN/mirror/utils/apache-cassandra-2.2.13-bin.tar.gz
       dest: /opt
       creates : /opt/cassandra
     tags:
      - cassandra

   - name: Setup cassandra node, 3. update alternative for java
     alternatives:
       name: java
       link: /usr/bin/java
       path: /opt/jdk1.8.0_191/bin/javac
     tags:
      - cassandra
      - jdk


   - name: Setup cassandra node, 4. mv /opt/apache-cassandra-2.2.13 /opt/cassandra
     ignore_errors: yes
     command: mv /opt/apache-cassandra-2.2.13 /opt/cassandra
     args:
       creates: /opt/cassandra
     tags:
      - cassandra



   - name: Setup cassandra node, 5a. /opt/cassandra/conf/cassandra.yaml entries removed 1
     lineinfile:
       path: /opt/cassandra/conf/cassandra.yaml
       state: absent
       regexp: '^listen_address: localhost'
     tags:
      - cassandra

   - name: Setup cassandra node, 5b. /opt/cassandra/conf/cassandra.yaml entries removed 2
     lineinfile:
       path: /opt/cassandra/conf/cassandra.yaml
       state: absent
       regexp: '^rpc_address: localhost'
     tags:
      - cassandra

   - name: Setup cassandra node, 6. /opt/cassandra/conf/cassandra.yaml entries added
     blockinfile:
       path: /opt/cassandra/conf/cassandra.yaml
       block: |
         listen_address: {{ ansible_ssh_host }}
         rpc_address: {{ ansible_ssh_host }}
     tags:
      - cassandra

   - name: Setup cassandra node, 6. /opt/cassandra/conf/cassandra.yaml entries added
     blockinfile:
       path: /root/.bashrc
       block: |
         export JAVA_HOME="/opt/jdk1.8.0_191"
         export PATH=$PATH:$JAVA_HOME/bin
     tags:
      - cassandra

   - name: Setup cassandra node, 7a. /opt/cassandra/conf/cassandra.yaml entries replaced
     replace:
       path: /opt/cassandra/conf/cassandra.yaml
       regexp: '          - seeds: "127.0.0.1"'
       replace: '          - seeds: "192.168.1.233"'
     tags:
      - cassandra


   - name: Setup cassandra node, 7b. /opt/cassandra/conf/cassandra.yaml entries replaced
     replace:
       path: /opt/cassandra/conf/cassandra.yaml
       regexp: '^endpoint_snitch: SimpleSnitch'
       replace: 'endpoint_snitch: GossipingPropertyFileSnitch'
     tags:
      - cassandra


   - name: Setup cassandra node, 8a. /opt/cassandra/conf/cassandra-rackdc.properties entries replaced
     replace:
       path: /opt/cassandra/conf/cassandra-rackdc.properties
       regexp: '^dc=dc1'
       replace: 'dc=SLOWICZA'
     tags:
      - cassandra


   - name: Setup cassandra node, 8b. /opt/cassandra/conf/cassandra-rackdc.properties entries replaced
     replace:
       path: /opt/cassandra/conf/cassandra-rackdc.properties
       regexp: '^rack=rack1'
       replace: 'rack={{ inventory_hostname }}'
     tags:
      - cassandra

   - name: Setup cassandra node, 9a. create service
     copy:
       dest: /lib/systemd/system/cassandra.service
       content: |
         [Unit]
         Description=Remi's cassandra
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/opt/cassandra/bin
         ExecStart=/opt/cassandra/bin/cassandra -f
         Restart=on-failure
         Environment="JAVA_HOME=/opt/jdk1.8.0_191"
         Environment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/jdk1.8.0_191/bin"

         [Install]
         WantedBy=multi-user.target
     tags:
      - cassandra

   
   - name: Setup cassandra node, 9b. create service
     file:
       path: /lib/systemd/system/cassandra.service
       mode: 0644
     tags:
      - cassandra

   - name: Setup cassandra node, 9c. create service
     systemd:
       name: cassandra.service
       state: started
       enabled: yes
     tags:
      - cassandra


   - name: Disable default X startup (does not work, use rapi-config)
     service:
       name: lightdm.service
       enabled: no
     tags:
      - nogui


   - name: Setup sensors_gathering. Install required packages
     apt:
       name: subversion,python-pip,build-essential,python-dev,git,python-rpi.gpio,python-dateutil
       state: present
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Install required pip packages
     pip:
       name: cassandra-driver,kafka-python,mysql-connector
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Checkout scripto repository
     subversion:
       repo: https://github.com/rbogusze/oracleinfrastructure/trunk/scripto
       dest: /home/pi/scripto
     register: svnrepo
     tags:
      - sensors_gathering
      - scripto

   - name: Setup sensors_gathering. Checkout git repository for DHT-22 temp/humid sensor to work
     git:
       repo: 'https://github.com/adafruit/Adafruit_Python_DHT.git'
       dest: /home/pi/Adafruit_Python_DHT
       update: no
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Install python module for DHT-22
     ignore_errors: yes
     command: python setup.py install
     args:
       chdir: /home/pi/Adafruit_Python_DHT
       creates: /home/pi/Adafruit_Python_DHT/build
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Configure Temperature service
     copy:
       dest: /lib/systemd/system/temperature.service
       content: |
         [Unit]
         Description=Remi Temperature gathering on cassandra
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/home/pi/scripto/python/temperature
         ExecStart=/usr/bin/python collect.py
         Restart=always
         RestartSec=60

         [Install]
         WantedBy=multi-user.target
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Configure sensor DHT22 gathering
     copy:
       dest: /lib/systemd/system/dht22.service
       content: |
         [Unit]
         Description=Remi sensor DHT22 gathering
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/home/pi/scripto/python/temperature
         ExecStart=/usr/bin/python gather_DHT_sensor_data.py
         Restart=always
         RestartSec=60

         [Install]
         WantedBy=multi-user.target
     tags:
      - sensors_gathering

   - name: Setup temperature_outside service. create service file
     copy:
       dest: /lib/systemd/system/temperature_outside.service
       content: |
         [Unit]
         Description=Remi temperature_outside
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/home/pi/scripto/python/temperature
         ExecStart=/usr/bin/python outside_temperature.py
         Restart=always
         RestartSec=60

         [Install]
         WantedBy=multi-user.target
     tags:
      - temperature_outside

   - name: Setup lufcik_action service. create service file
     copy:
       dest: /lib/systemd/system/lufcik_action.service
       content: |
         [Unit]
         Description=Remi lufcik_action
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/home/pi/scripto/python/temperature
         ExecStart=/usr/bin/python lufcik_action.py
         Restart=always
         RestartSec=60

         [Install]
         WantedBy=multi-user.target
     tags:
      - lufcik_action


   - name: Setup lufcik_decision_maker service. create service file
     copy:
       dest: /lib/systemd/system/lufcik_decision_maker.service
       content: |
         [Unit]
         Description=Remi lufcik_decision_maker
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/home/pi/scripto/python/temperature
         ExecStart=/usr/bin/python lufcik_decision_maker.py
         Restart=always
         RestartSec=60

         [Install]
         WantedBy=multi-user.target
     tags:
      - lufcik_decision_maker








   - name: Setup sensors_gathering. create service
     file:
       path: /lib/systemd/system/temperature.service
       mode: 0644
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. create service
     file:
       path: /lib/systemd/system/dht22.service
       mode: 0644
     tags:
      - sensors_gathering

   - name: Setup temperature_outside service. create service file permissions
     file:
       path: /lib/systemd/system/temperature_outside.service
       mode: 0644
     tags:
      - temperature_outside


   - name: Setup lufcik_action service. create service file permissions
     file:
       path: /lib/systemd/system/lufcik_action.service
       mode: 0644
     tags:
      - lufcik_action

   - name: Setup lufcik_decision_maker service. create service file permissions
     file:
       path: /lib/systemd/system/lufcik_decision_maker.service
       mode: 0644
     tags:
      - lufcik_decision_maker




   - name: Setup sensors_gathering. create service
     systemd:
       name: temperature.service
       state: started
       enabled: yes
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. create service
     systemd:
       name: dht22.service
       state: started
       enabled: yes
     tags:
      - sensors_gathering

   - name: Setup temperature_outside service. start service
     systemd:
       name: temperature_outside.service
       state: started
       enabled: yes
     tags:
      - temperature_outside

   - name: Setup lufcik_action service. start service
     systemd:
       name: lufcik_action.service
       state: started
       enabled: yes
     tags:
      - lufcik_action

   - name: Setup lufcik_decision_maker service. start service
     systemd:
       name: lufcik_decision_maker.service
       state: started
       enabled: yes
     tags:
      - lufcik_decision_maker



   - name: Make sure sensu host is stored in /etc/hosts
     lineinfile:
       dest: /etc/hosts
       line: "192.168.1.167 sensu.home sensu"
       state: present
     tags:
      - sensors_gathering

   
   - name: Restart temperature.service if SVN repository has changed
     service:
       name: temperature.service
       state: restarted
       enabled: yes
     when: svnrepo.changed
     tags:
      - sensors_gathering

   - name: Restart dht22.service if SVN repository has changed
     service:
       name: dht22.service
       state: restarted
       enabled: yes
     when: svnrepo.changed
     tags:
      - sensors_gathering

   - name: k8s - Install required packages
     apt:
       pkg:
       - vim
       - python3
     tags:
      - k8s

   - name: k8s - Install microk8s with snap
     snap:
       name: microk8s 
       classic: yes
     tags:
      - k8s

   - name: k8s - Fixing "https://github.com/ubuntu/microk8s/issues/728" DO THIS MANUALLY
     shell: cat /boot/firmware/cmdline.txt
     register: cmdline
     tags:
      - k8s1

   - name: Make sure /etc/hosts has the same entries on all hosts
     lineinfile:
       dest: /etc/hosts
       line: '{{ item }}'
     with_items:
       - '192.168.1.152 producer2' 
       - '192.168.1.153 producer3' 
       - '192.168.1.154 producer4' 
       - '192.168.1.155 producer5' 
       - '192.168.1.171 red01' 
       - '192.168.1.172 red02' 
       - '192.168.1.173 red03' 
       - '192.168.1.161 consumer1' 
       - '192.168.1.162 consumer2' 
       - '192.168.1.163 consumer3' 
       - '192.168.1.164 consumer4' 
       - '192.168.1.104 monitoring' 
     tags:
      - hosts_unity

   - name: Make sure /etc/hosts has the same entries on all hosts, remove 127.0.1.1 line
     lineinfile:
       dest: /etc/hosts
       regexp: '^127\.0\.1\.1'
       state: absent
     tags:
      - hosts_unity

   - name: Logstash - Download logstash-5.4.2.deb
     get_url: 
       url: https://artifacts.elastic.co/downloads/logstash/logstash-5.4.2.deb
       dest: /opt/logstash-5.4.2.deb
       checksum: md5:16307bfde7929bea4086d108f5e45b8b
     tags:
      - logstash


   - name: Logstash - Install logstash-5.4.2.deb
     apt:
       deb: /opt/logstash-5.4.2.deb
     tags:
      - logstash

   - name: Logstash - Install ant,texinfo
     apt:
       name: ant,texinfo,git
       state: present
     tags:
      - logstash

   - name: Logstash - checkout jffi
     git:
       repo: 'https://github.com/jnr/jffi.git'
       dest: /opt/jffi
       update: no
     tags:
      - logstash

   - name: Logstash - run ant jar
     command: ant jar
     args:
       chdir: /opt/jffi
       creates: /opt/jffi/build/jni/libjffi-1.2.so
     tags:
      - logstash


   - name: Logstash - copy libjffi-1.2.so
     ansible.builtin.copy:
       src: /opt/jffi/build/jni/libjffi-1.2.so
       dest: /usr/share/logstash/vendor/jruby/lib/jni/arm-Linux
       owner: root
       group: root
       mode: '0755'
       backup: yes
       remote_src: yes
     tags:
      - logstash

   - name: Logstash - decrease JVM memory
     ansible.builtin.replace:
       path: /etc/logstash/jvm.options
       regexp: '-Xms256m'
       replace: '-Xms64m'
       backup: yes
     tags:
      - logstash


   - name: Logstash - decrease JVM memory
     ansible.builtin.replace:
       path: /etc/logstash/jvm.options
       regexp: '-Xmx1g'
       replace: '-Xmx64m'
       backup: yes
     tags:
      - logstash

   - name: Logstash - decrease JVM memory (after thought)
     ansible.builtin.replace:
       path: /etc/logstash/jvm.options
       regexp: '-Xmx64m'
       replace: '-Xmx128m'
       backup: yes
     register: logstash
     tags:
      - logstash


   - name: Logstash - /var/log/*.log to logstash
     ansible.builtin.copy:
       src: ~/scripto/ansible/logstash/var_log_to_logstash.conf
       dest: /etc/logstash/conf.d/var_log_to_logstash.conf
       owner: root
       group: root
       mode: '0644'
     register: logstash
     tags:
      - logstash
      - logstash_var


   - name: Logstash - /var/log/*.log to logstash, general filter output
     ansible.builtin.copy:
       src: ~/scripto/ansible/logstash/filter_output.conf
       dest: /etc/logstash/conf.d/filter_output.conf
       owner: root
       group: root
       mode: '0644'
     register: logstash
     tags:
      - logstash
      - logstash_filter

   - name: Logstash - add logstash user to adm group
     ansible.builtin.user:
       name: logstash
       group: logstash
       groups: root,adm
     register: logstash
     tags:
      - logstash
   


   - name: Logstash - opt log to logstash
     ansible.builtin.copy:
       src: ~/scripto/ansible/logstash/opt_log_to_logstash.conf
       dest: /etc/logstash/conf.d/opt_log_to_logstash.conf
       owner: root
       group: root
       mode: '0644'
     register: logstash
     tags:
      - logstash
      - logstash_opt
     
   - name: Logstash - apps log to logstash
     ansible.builtin.copy:
       src: ~/scripto/ansible/logstash/apps_log_to_logstash.conf
       dest: /etc/logstash/conf.d/apps_log_to_logstash.conf
       owner: root
       group: root
       mode: '0644'
     register: logstash
     tags:
      - logstash
      - logstash_apps

   - name: Logstash - remove old config files that were duplicating filter directive
     file:
       path: "{{ item }}"
       state: absent
     with_items:
       - /etc/logstash/conf.d/redis_to_logstash.conf
       - /etc/logstash/conf.d/kafka1_to_logstash.conf
       - /etc/logstash/conf.d/kafka_to_logstash.conf
     register: logstash
     tags:
      - logstash
     
   - name: Logstash - Make sure logstash.service has proper 644
     file:
       path: /etc/systemd/system/logstash.service
       mode: 0644
     register: logstash
     tags:
      - logstash
    
   - name: Logstash - restart service if conf has changed
     service:
       name: logstash.service
       state: restarted
       enabled: yes
     when: logstash is changed
     tags:
      - logstash
      - logstash_var
      - logstash_opt
      - logstash_apps
      - logstash_filter


   - name: Disable temperature gathering service
     service:
       name: temperature.service
       state: stopped
       enabled: no
     tags:
      - disable_temp

   - name: Disable temperature gathering service
     service:
       name: dht22.service
       state: stopped
       enabled: no
     tags:
      - disable_temp

   - name: Cleanup Redis/Sentinel installation 1/3
     service:
       name: redis_{{ R_PORT }}.service
       state: stopped
       enabled: no
       daemon_reload: yes
     ignore_errors: yes
     tags:
      - cleanup_redis

   - name: Cleanup Redis/Sentinel installation 2/3
     service:
       name: sentinel_{{ R_SENTINEL_UNIQUE_STR }}.service
       state: stopped
       enabled: no
       daemon_reload: yes
     ignore_errors: yes
     tags:
      - cleanup_redis

   - name: Cleanup Redis/Sentinel installation 3/3
     file:
       path: "{{ item }}"
       state: absent
     with_items:
#       - ~/redis_compile/redis-6.2.3  # takes too much time to run make and make test
       - /usr/local/bin/redis_6.2.3
       - ~/redis_{{ R_MASTER_NAME }}.env
       - /etc/redis
       - /etc/init.d/redis_{{ R_PORT }}
       - /etc/systemd/system/redis_{{ R_PORT }}.service
       - /apps/redis
       - /etc/init.d/sentinel_{{ R_SENTINEL_UNIQUE_STR }}
       - /etc/systemd/system/sentinel_{{ R_SENTINEL_UNIQUE_STR }}.service
     tags:
      - cleanup_redis

# Fluent
   - name: Fluent - creates /etc/fluent directory
     ansible.builtin.file:
       path: /etc/fluent
       state: directory
       mode: '0755'
     tags:
      - fluent

   - name: Fluent - configuration file
     ansible.builtin.copy:
       src: ~/scripto/ansible/fluent/fluent.conf
       dest: /etc/fluent/fluent.conf
       owner: root
       group: root
       mode: '0644'
     register: fluent
     tags:
      - fluent
      - fluent_conf
      

   - name: Fluent - shutdown logstash
     service:
       name: logstash.service
       state: stopped
       enabled: no
       daemon_reload: yes
     ignore_errors: yes
     tags:
      - fluent

   - name: Fluent -Install required packages with apt ruby-dev
     apt:
       name: ruby-dev
       state: present
     tags:
      - fluent

# that somehow does not do the install
#   - name: Fluent -Install required packages with gem fluentd
#     community.general.gem:
#       name: fluentd
#       version: 0.12.43
#       state: present
#     tags:
#      - fluent
#
#   - name: Fluent -Install required packages with gem rake
#     community.general.gem:
#       name: rake
#       state: present
#     tags:
#      - fluent
   - name: Fluent -Install fluentd
     command: /usr/bin/gem install fluentd -v "~> 0.12.0"
     args:
       creates: /usr/local/bin/fluent-gem
     tags:
      - fluent

   - name: Fluent -Install rake 
     command: /usr/bin/gem install rake
     args:
       creates: /var/lib/gems/2.5.0/gems/fluent-plugin-kafka-0.16.3
     tags:
      - fluent

   - name: Fluent -Install required packages with fluent-gem fluent-plugin-td
     command: /usr/local/bin/fluent-gem install fluent-plugin-td
     args:
       creates: /var/lib/gems/2.5.0/gems/fluent-plugin-td-1.1.0
     tags:
      - fluent

   - name: Fluent -Install required packages with fluent-gem fluent-plugin-kafka
     command: /usr/local/bin/fluent-gem install fluent-plugin-kafka
     args:
       creates: /var/lib/gems/2.5.0/gems/fluent-plugin-kafka-0.16.3
     tags:
      - fluent

   - name: Fluent -Run fluent as a service
     copy:
       dest: /etc/systemd/system/fluentd.service
       backup: yes
       content: |
         [Unit]
         Requires=network.target remote-fs.target
         After=network.target remote-fs.target
         StartLimitIntervalSec=600
         StartLimitBurst=10

         [Service]
         Type=simple
         User=root
         ExecStart=/usr/local/bin/fluentd
         Restart=on-failure
         RestartSec=60s

         [Install]
         WantedBy=multi-user.target
     register: fluent
     tags:
      - fluent_service
      - fluent

   - name: Fluent -Start fluent service
     service:
       name: fluentd.service
       state: started
       enabled: yes
     tags:
      - fluent

   - name: Fluent -restart fluent service if service conf changed
     service:
       name: fluentd.service
       state: restarted
       enabled: yes
       daemon_reload: yes
     when: 
      - fluent.changed
     tags:
      - fluent_service
      - fluent
      - fluent_conf

# say that I am up https://github.com/rbogusze/say-that-i-am-up
# monitoring uptime and activity to kafka topic

   - name: Setup say-that-i-am-up. Install required packages
     apt:
       name: python3-pip,git
       state: present
       update_cache: true
       cache_valid_time: 36000
     tags:
      - say-that-i-am-up


   - name: Checkout say-that-i-am-up git repo
     git:
       repo: 'https://github.com/rbogusze/say-that-i-am-up.git'
       dest: /opt/say-that-i-am-up
       update: yes
     tags:
      - say-that-i-am-up

   - name: Setup say-that-i-am-up. Install required pip3 packages
     pip:
       name: kafka-python,psutil,gitpython,analytics-python
       executable: pip3
     tags:
      - say-that-i-am-up

   - name: Setup say-that-i-am-up. Segment dev key
     copy:
       dest: /opt/segment_token.txt
       content: |
         {{ vault_segment_dev_token }}
     tags:
      - say-that-i-am-up_segment_key
      - say-that-i-am-up

   - name: Setup say-that-i-am-up. Create service 1/3
     copy:
       dest: /lib/systemd/system/say-that-i-am-up.service
       content: |
         [Unit]
         Description=Remi's say-that-i-am-up
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/opt/say-that-i-am-up
         ExecStart=/usr/bin/python3 activity_monitor.py
         Restart=on-failure
         Environment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/jdk1.8.0_191/bin"

         [Install]
         WantedBy=multi-user.target
     tags:
      - say-that-i-am-up
      - say-that-i-am-up_service

   
   - name: Setup say-that-i-am-up. Create service 2/3
     file:
       path: /lib/systemd/system/say-that-i-am-up.service
       mode: 0644
     tags:
      - say-that-i-am-up
      - say-that-i-am-up_service

   - name: Setup say-that-i-am-up. Create service 3/3
     systemd:
       name: say-that-i-am-up.service
       state: started
       enabled: yes
     tags:
      - say-that-i-am-up
      - say-that-i-am-up_service

#
# Prometheus server installation
# 

   - name: Prometheus server installation, download binaries
     unarchive:
       src: https://github.com/prometheus/prometheus/releases/download/v2.42.0/prometheus-2.42.0.linux-armv7.tar.gz
       dest: /opt/prometheus
       remote_src: yes
       creates : /opt/prometheus/prometheus-2.42.0.linux-armv7
     tags:
      - prometheus_server

   - name: Prometheus server installation, chown root:root
     ansible.builtin.file:
       path: /opt/prometheus/prometheus-2.42.0.linux-armv7
       owner: root
       group: root
       recurse: yes
     tags:
      - prometheus_server

   - name: Prometheus server installation, create link
     ansible.builtin.file:
       src: /opt/prometheus/prometheus-2.42.0.linux-armv7
       dest: /opt/prometheus/prometheus
       state: link
       force: yes
     tags:
      - prometheus_server

   - name: Prometheus server installation, systemd service
     copy:
       dest: /etc/systemd/system/prometheus.service
       backup: yes
       content: |
         [Unit]
         [Unit]
         Description=Prometheus server
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/opt/prometheus/prometheus
         ExecStart=/opt/prometheus/prometheus/prometheus
         Restart=on-failure

         [Install]
         WantedBy=multi-user.target
     register: prometheus
     tags:
      - prometheus_server

   - name: Start Prometheus server
     service:
       name: prometheus.service
       state: started
       enabled: yes
     tags:
      - prometheus_server

   - name: Prometheus config for kafka brokers
     ansible.builtin.blockinfile:
       path: /opt/prometheus/prometheus/prometheus.yml
       marker: "# {mark} ANSIBLE MANAGED BLOCK for kafka_red0123"
       block: |
         # this is a comment to make the identation work
           - job_name: "kafka-broker"
             scrape_interval: 15s # Override the default global interval for this job
             scrape_timeout: 15s # Override the default global timeout for this job
             static_configs:
               - targets: ["red01:8080", "red02:8080", "red03:8080", "producer2:8080"]
                 labels:
                   env: "red0123"
               - targets: ["monitoring:8080"]
                 labels:
                   env: "monitoring"
     register: prometheus
     tags:
      - prometheus_server

   - name: Prometheus config for kafka_monitoring
     ansible.builtin.blockinfile:
       path: /opt/prometheus/prometheus/prometheus.yml
       marker: "# {mark} ANSIBLE MANAGED BLOCK for kafka_monitoring "
       block: |
         # this is a comment to make the identation work
         #  - job_name: "kafka_monitoring"
         #    static_configs:
         #      - targets:
         #          - "monitoring:8080"
         #        labels:
         #          env: "dev"
     register: prometheus
     tags:
      - prometheus_server

   - name: Prometheus config for kafka_monitoring, node_exporter
     ansible.builtin.blockinfile:
       path: /opt/prometheus/prometheus/prometheus.yml
       marker: "# {mark} ANSIBLE MANAGED BLOCK for node_exporter "
       block: |
         # this is a comment to make the identation work
           - job_name: "node_exporter"
             static_configs:
               - targets:
                   - "monitoring:9100"
                   - "red01:9100"
                   - "red02:9100"
                   - "red03:9100"
                   - "producer2:9100"
                 labels:
                   env: "dev"
     register: prometheus
     tags:
      - prometheus_server


   - name: Restart Prometheus server if some configuration has changed
     service:
       name: prometheus.service
       state: restarted
       enabled: yes
       daemon_reload: yes
     when: prometheus.changed
     tags:
      - prometheus_server

#
# /Prometheus server installation
#

#
# Grafana server installation
# WIP

   - name: Grafana server, download deb
     get_url: 
       url: https://dl.grafana.com/oss/release/grafana_9.4.3_armhf.deb
       dest: /opt/grafana_9.4.3_armhf.deb
       checksum: sha256:7e93e6d24439cec65b369e6ebb856a5aaeb151392b26c0d8970cd6a4e44b1bf6
     tags:
      - grafana_server

   - name: Grafana server, install deb
     apt:
       deb: /opt/grafana_9.4.3_armhf.deb
     tags:
      - grafana_server

   - name: Start Grafana server
     service:
       name: grafana-server.service
       state: started
       enabled: yes
     tags:
      - grafana_server




#
# /Grafana server installation
#


#
# Schema registry server installation
#
   - name: Schema registry server, create dir
     ansible.builtin.file:
       path: /opt/confluent
       state: directory
       mode: '0755'
     tags:
      - schema_registry

   - name: Schema registry server, download and unarchive
     unarchive:
       src: https://packages.confluent.io/archive/5.3/confluent-community-5.3.8-2.12.tar.gz
       dest: /opt/confluent
       remote_src: yes
       creates : /opt/confluent/confluent-5.3.8
     tags:
      - schema_registry

   - name: Schema registry server, modify conf
     replace:
       path: /opt/confluent/confluent-5.3.8/etc/schema-registry/schema-registry.properties
       regexp: '^kafkastore.connection.url=localhost:2181'
       replace: '#kafkastore.connection.url=localhost:2181'
     tags:
      - schema_registry

   - name: Schema registry server, modify conf
     replace:
       path: /opt/confluent/confluent-5.3.8/etc/schema-registry/schema-registry.properties
       regexp: '^#kafkastore.bootstrap.servers=PLAINTEXT://localhost:9092'
       replace: 'kafkastore.bootstrap.servers=PLAINTEXT://192.168.1.104:9092'
     tags:
      - schema_registry

#
# /Schema registry server installation
#

#
# node_exporter installation to provide some basic node metrics
#
   - name: node_exporter, download and unarchive
     unarchive:
       src: https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-armv7.tar.gz
       dest: /opt
       remote_src: yes
       creates : /opt/node_exporter-1.5.0.linux-armv7
     tags:
      - node_exporter

   - name: node_exporter, chown root:root
     ansible.builtin.file:
       path: /opt/node_exporter-1.5.0.linux-armv7
       owner: root
       group: root
       recurse: yes
     tags:
      - node_exporter

   - name: node_exporter, create link
     ansible.builtin.file:
       src: /opt/node_exporter-1.5.0.linux-armv7
       dest: /opt/node_exporter
       state: link
       force: yes
     tags:
      - node_exporter

   - name: node_exporter, systemd service
     copy:
       dest: /etc/systemd/system/node_exporter.service
       backup: yes
       content: |
         [Unit]
         Description=Prometheus Node Exporter
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/opt/node_exporter
         ExecStart=/opt/node_exporter/node_exporter
         Restart=on-failure

         [Install]
         WantedBy=multi-user.target
     tags:
      - node_exporter

   - name: Start node_exporter server
     service:
       name: node_exporter.service
       state: started
       enabled: yes
     tags:
      - node_exporter

#
# /node_exporter installation to provide some basic node metrics
#

#
# CC cruise-control autostart
#

   - name: Run CC as a service
     copy:
       dest: /etc/systemd/system/cruise_control.service
       backup: no
       content: |
         [Unit]
         Requires=network.target remote-fs.target
         After=network.target remote-fs.target
         StartLimitIntervalSec=600
         StartLimitBurst=10

         [Service]
         Type=simple
         User=root
         Environment="JAVA_HOME=/usr/lib/jvm/java-11-openjdk-armhf"
         Environment="PATH=$JAVA_HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
         WorkingDirectory=/opt/cc/cruise-control-2.5.42
         ExecStart=/bin/sh -c '/opt/cc/cruise-control-2.5.42/kafka-cruise-control-start.sh /opt/cc/cruise-control-2.5.42/config/cruisecontrol.properties 9091 > /var/log/cruise-control.log 2>&1'
         Restart=on-failure
         RestartSec=60s

         [Install]
         WantedBy=multi-user.target
     register: cruise_control
     tags:
      - cruise_control

   - name: Start CC
     service:
       name: cruise_control.service
       state: started
       enabled: yes
     tags:
      - cruise_control

   - name: Restart CC if some configuration has changed
     service:
       name: cruise_control.service
       state: restarted
       enabled: yes
       daemon_reload: yes
     when: cruise_control.changed
     tags:
      - cruise_control

#
# CC cruise-control autostart
#
