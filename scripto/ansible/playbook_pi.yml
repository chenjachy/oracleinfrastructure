- name: Setup basic actions on computers at home
  hosts: all

  vars_files:
  - ~/osobiste/dane_aplikacji/remik/ansible_vault.yml

  become: yes
  become_user: root
  tasks:
   - name: Install required packages
     apt:
       name: vim
       state: present
     tags:
      - update

   - name: Remove non-essential packages to save on space
     apt:
       name: emacs,samba-common,scratch,minecraft-pi,manpages,manpages-dev,gnome-user-guide,rpd-wallpaper,xserver-xorg,wolfram-engine,libreoffice,yelp
       state: absent
     tags:
      - cleanup

   - name: Remove useless packages from the cache
     apt:
       autoclean: yes
     tags:
      - cleanup

   - name: Remove dependencies that are no longer required
     apt:
       autoremove: yes
     tags:
      - cleanup

   - name: Setup Wi-Fi abrakadabra
     blockinfile:
       path: /etc/wpa_supplicant/wpa_supplicant.conf
       block: |
         network={
           ssid="abrakadabra"
           psk="{{ vault_wifi_abrakadabra }}"
         }
     tags:
      - wifia
      
   - name: Setup Wi-Fi remikaniaslowicza
     blockinfile:
       path: /etc/wpa_supplicant/wpa_supplicant.conf
       block: |
         network={
           ssid="remikaniaslowicza"
           psk="{{ vault_wifi_remikaniaslowicza }}"
         }
     tags:
      - wifir
      
   - name: Setup hostname
     hostname:
       name: "{{ inventory_hostname }}"
     tags:
      - hostname

   - name: Setup /etc/hosts
     lineinfile:
       dest: /etc/hosts
       regexp: '.*{{ inventory_hostname }}$'
       line: '{{ ansible_ssh_host }} {{ inventory_hostname }}'
       state: present
     tags:
      - hostname

   
   - name: Setup static ip for wlan0
     blockinfile:
       path: /etc/dhcpcd.conf
       block: |
         interface wlan0

         static ip_address={{ ansible_ssh_host }}/24
         static routers=192.168.1.1
         static domain_name_servers=192.168.1.1
     tags:
      - static_ip

   - name: Setup static ip for eth0
     lineinfile: dest=/boot/cmdline.txt
       backrefs=True
       state=present
       regexp='(^dwc_otg(.*)$)'
       line='\1 net.ifnames=0'
     tags:
      - static_ip_eth0

   - name: Setup static ip for eth0
     blockinfile:
       path: /etc/dhcpcd.conf
       block: |
         interface eth0

         static ip_address={{ ansible_ssh_new_host }}/24
         static routers=192.168.1.1
         static domain_name_servers=192.168.1.1
     tags:
      - static_ip_eth0



   - name: Setup cassandra node, 1. copy jdk
     unarchive:
       src: /KASZTELAN/mirror/utils/jdk-8u191-linux-arm32-vfp-hflt.tar.gz
       dest: /opt
       creates : /opt/jdk1.8.0_191
     tags:
      - cassandra

   - name: Setup cassandra node, 2. copy cassandra binaries
     unarchive:
       src: /KASZTELAN/mirror/utils/apache-cassandra-2.2.13-bin.tar.gz
       dest: /opt
       creates : /opt/cassandra
     tags:
      - cassandra

   - name: Setup cassandra node, 3. update alternative for java
     alternatives:
       name: java
       link: /usr/bin/java
       path: /opt/jdk1.8.0_191/bin/javac
     tags:
      - cassandra


   - name: Setup cassandra node, 4. mv /opt/apache-cassandra-2.2.13 /opt/cassandra
     ignore_errors: yes
     command: mv /opt/apache-cassandra-2.2.13 /opt/cassandra
     args:
       creates: /opt/cassandra
     tags:
      - cassandra



   - name: Setup cassandra node, 5a. /opt/cassandra/conf/cassandra.yaml entries removed 1
     lineinfile:
       path: /opt/cassandra/conf/cassandra.yaml
       state: absent
       regexp: '^listen_address: localhost'
     tags:
      - cassandra

   - name: Setup cassandra node, 5b. /opt/cassandra/conf/cassandra.yaml entries removed 2
     lineinfile:
       path: /opt/cassandra/conf/cassandra.yaml
       state: absent
       regexp: '^rpc_address: localhost'
     tags:
      - cassandra

   - name: Setup cassandra node, 6. /opt/cassandra/conf/cassandra.yaml entries added
     blockinfile:
       path: /opt/cassandra/conf/cassandra.yaml
       block: |
         listen_address: {{ ansible_ssh_host }}
         rpc_address: {{ ansible_ssh_host }}
     tags:
      - cassandra

   - name: Setup cassandra node, 6. /opt/cassandra/conf/cassandra.yaml entries added
     blockinfile:
       path: /root/.bashrc
       block: |
         export JAVA_HOME="/opt/jdk1.8.0_191"
         export PATH=$PATH:$JAVA_HOME/bin
     tags:
      - cassandra

   - name: Setup cassandra node, 7a. /opt/cassandra/conf/cassandra.yaml entries replaced
     replace:
       path: /opt/cassandra/conf/cassandra.yaml
       regexp: '          - seeds: "127.0.0.1"'
       replace: '          - seeds: "192.168.1.233"'
     tags:
      - cassandra


   - name: Setup cassandra node, 7b. /opt/cassandra/conf/cassandra.yaml entries replaced
     replace:
       path: /opt/cassandra/conf/cassandra.yaml
       regexp: '^endpoint_snitch: SimpleSnitch'
       replace: 'endpoint_snitch: GossipingPropertyFileSnitch'
     tags:
      - cassandra


   - name: Setup cassandra node, 8a. /opt/cassandra/conf/cassandra-rackdc.properties entries replaced
     replace:
       path: /opt/cassandra/conf/cassandra-rackdc.properties
       regexp: '^dc=dc1'
       replace: 'dc=SLOWICZA'
     tags:
      - cassandra


   - name: Setup cassandra node, 8b. /opt/cassandra/conf/cassandra-rackdc.properties entries replaced
     replace:
       path: /opt/cassandra/conf/cassandra-rackdc.properties
       regexp: '^rack=rack1'
       replace: 'rack={{ inventory_hostname }}'
     tags:
      - cassandra

   - name: Setup cassandra node, 9a. create service
     copy:
       dest: /lib/systemd/system/cassandra.service
       content: |
         [Unit]
         Description=Remi's cassandra
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/opt/cassandra/bin
         ExecStart=/opt/cassandra/bin/cassandra -f
         Restart=on-failure
         Environment="JAVA_HOME=/opt/jdk1.8.0_191"
         Environment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/jdk1.8.0_191/bin"

         [Install]
         WantedBy=multi-user.target
     tags:
      - cassandra

   
   - name: Setup cassandra node, 9b. create service
     file:
       path: /lib/systemd/system/cassandra.service
       mode: 0644
     tags:
      - cassandra

   - name: Setup cassandra node, 9c. create service
     systemd:
       name: cassandra.service
       state: started
       enabled: yes
     tags:
      - cassandra


   - name: Disable default X startup (does not work, use rapi-config)
     service:
       name: lightdm.service
       enabled: no
     tags:
      - nogui


   - name: Setup sensors_gathering. Install required packages
     apt:
       name: subversion,python-pip,build-essential,python-dev,git,python-rpi.gpio,python-dateutil
       state: present
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Install required pip packages
     pip:
       name: cassandra-driver,kafka-python,mysql-connector
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Checkout scripto repository
     subversion:
       repo: https://github.com/rbogusze/oracleinfrastructure/trunk/scripto
       dest: /home/pi/scripto
     register: svnrepo
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Checkout git repository for DHT-22 temp/humid sensor to work
     git:
       repo: 'https://github.com/adafruit/Adafruit_Python_DHT.git'
       dest: /home/pi/Adafruit_Python_DHT
       update: no
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Install python module for DHT-22
     ignore_errors: yes
     command: python setup.py install
     args:
       chdir: /home/pi/Adafruit_Python_DHT
       creates: /home/pi/Adafruit_Python_DHT/build
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Configure Temperature service
     copy:
       dest: /lib/systemd/system/temperature.service
       content: |
         [Unit]
         Description=Remi Temperature gathering on cassandra
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/home/pi/scripto/python/temperature
         ExecStart=/usr/bin/python collect.py
         Restart=always
         RestartSec=60

         [Install]
         WantedBy=multi-user.target
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. Configure sensor DHT22 gathering
     copy:
       dest: /lib/systemd/system/dht22.service
       content: |
         [Unit]
         Description=Remi sensor DHT22 gathering
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/home/pi/scripto/python/temperature
         ExecStart=/usr/bin/python gather_DHT_sensor_data.py
         Restart=always
         RestartSec=60

         [Install]
         WantedBy=multi-user.target
     tags:
      - sensors_gathering

   - name: Setup temperature_outside service. create service file
     copy:
       dest: /lib/systemd/system/temperature_outside.service
       content: |
         [Unit]
         Description=Remi temperature_outside
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/home/pi/scripto/python/temperature
         ExecStart=/usr/bin/python outside_temperature.py
         Restart=always
         RestartSec=60

         [Install]
         WantedBy=multi-user.target
     tags:
      - temperature_outside

   - name: Setup lufcik_action service. create service file
     copy:
       dest: /lib/systemd/system/lufcik_action.service
       content: |
         [Unit]
         Description=Remi lufcik_action
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/home/pi/scripto/python/temperature
         ExecStart=/usr/bin/python lufcik_action.py
         Restart=always
         RestartSec=60

         [Install]
         WantedBy=multi-user.target
     tags:
      - lufcik_action


   - name: Setup lufcik_decision_maker service. create service file
     copy:
       dest: /lib/systemd/system/lufcik_decision_maker.service
       content: |
         [Unit]
         Description=Remi lufcik_decision_maker
         After=multi-user.target

         [Service]
         Type=idle
         WorkingDirectory=/home/pi/scripto/python/temperature
         ExecStart=/usr/bin/python lufcik_decision_maker.py
         Restart=always
         RestartSec=60

         [Install]
         WantedBy=multi-user.target
     tags:
      - lufcik_decision_maker








   - name: Setup sensors_gathering. create service
     file:
       path: /lib/systemd/system/temperature.service
       mode: 0644
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. create service
     file:
       path: /lib/systemd/system/dht22.service
       mode: 0644
     tags:
      - sensors_gathering

   - name: Setup temperature_outside service. create service file permissions
     file:
       path: /lib/systemd/system/temperature_outside.service
       mode: 0644
     tags:
      - temperature_outside


   - name: Setup lufcik_action service. create service file permissions
     file:
       path: /lib/systemd/system/lufcik_action.service
       mode: 0644
     tags:
      - lufcik_action

   - name: Setup lufcik_decision_maker service. create service file permissions
     file:
       path: /lib/systemd/system/lufcik_decision_maker.service
       mode: 0644
     tags:
      - lufcik_decision_maker




   - name: Setup sensors_gathering. create service
     systemd:
       name: temperature.service
       state: started
       enabled: yes
     tags:
      - sensors_gathering

   - name: Setup sensors_gathering. create service
     systemd:
       name: dht22.service
       state: started
       enabled: yes
     tags:
      - sensors_gathering

   - name: Setup temperature_outside service. start service
     systemd:
       name: temperature_outside.service
       state: started
       enabled: yes
     tags:
      - temperature_outside

   - name: Setup lufcik_action service. start service
     systemd:
       name: lufcik_action.service
       state: started
       enabled: yes
     tags:
      - lufcik_action

   - name: Setup lufcik_decision_maker service. start service
     systemd:
       name: lufcik_decision_maker.service
       state: started
       enabled: yes
     tags:
      - lufcik_decision_maker



   - name: Make sure sensu host is stored in /etc/hosts
     lineinfile:
       dest: /etc/hosts
       line: "192.168.1.167 sensu.home sensu"
       state: present
     tags:
      - sensors_gathering

   
   - name: Restart temperature.service if SVN repository has changed
     service:
       name: temperature.service
       state: restarted
       enabled: yes
     when: svnrepo.changed
     tags:
      - sensors_gathering

   - name: Restart dht22.service if SVN repository has changed
     service:
       name: dht22.service
       state: restarted
       enabled: yes
     when: svnrepo.changed
     tags:
      - sensors_gathering
